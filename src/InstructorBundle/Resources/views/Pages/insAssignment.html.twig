{% extends 'InstructorBundle:Default:index.html.twig'%}

{% block stylesheets %}
    <link href="{{ 	asset('bundles/student/bootstrap/dist/css/bootstrap.min.css')}}" type="text/css" rel="stylesheet"/>
    <link href="{{ asset('css/main.css') }}" type="text/css" rel="stylesheet" />
    <script src="{{ asset('bundles/instructor/bootstrap/jquery.min.js') }}"></script>


{% endblock %}

{% block content %}

<div class="container" style="border: outset; border-color: #6c65ff">
    {{ form_start(form) }}
    {{ form_errors(form) }}
    {# ... #}

    <div>
        {{ form_label(form.AssignmentID,'Assignment ID') }}
        {{ form_widget(form.AssignmentID) }}
    </div>
    <div>
        {{ form_label(form.ClassID,'ClassID') }}
        {{ form_widget(form.ClassID) }}

    </div>
    <div>
        {{ form_label(form.Name,'Assignment Name') }}
        {{ form_widget(form.Name) }}

    </div>
    <div class="row">
        <div class="col-sm-4">
            {{ form_label(form.Description,'Description') }}
        </div>
        <div class="col-sm-6">
            {{ form_widget(form.Description) }}
        </div>
    </div>
    <div>
        {{ form_label(form.DueDate,'DueDate') }}
        {{ form_widget(form.DueDate) }}
    </div>
    <div>
        {{ form_label(form.DueTime,'DueTime') }}
        {{ form_widget(form.DueTime) }}
    </div>
    <div>
        {{ form_label(form.TotalMarks,'TotalMarks') }}
        {{ form_widget(form.TotalMarks) }}
    </div>
    <div>
        {{ form_label(form.Nooftestcases,'No of Test cases') }}
        {{ form_widget(form.Nooftestcases) }}
    </div>
    <div>
        {{ form_label(form.Testcasetype,'Test case type') }}
        {{ form_widget(form.Testcasetype) }}
    </div>
    <div class="row">
        <div class="col-sm-4">
            {#{{ form_label(form.emails,'E-mails') }}#}
            {{ form_label(form.inputs,'Input') }}
            {#store the prototype on the data-prototype attribute#}
            <ul id="input-fields-list"
                data-prototype="{{ form_widget(form.inputs.vars.prototype)|e('html_attr') }}">
                {% for inputField in form.inputs %}
                    <li>
                        {{ form_errors(inputField) }}
                        {{ form_widget(inputField) }}
                    </li>
                {% endfor %}
            </ul>
        </div>
        <div class="col-sm-4">
            {#{{ form_label(form.emails,'E-mails') }}#}
            {{ form_label(form.outputs,'Output') }}
            {#store the prototype on the data-prototype attribute#}
            <ul id="output-fields-list"
                data-prototype="{{ form_widget(form.outputs.vars.prototype)|e('html_attr') }}">
                {% for outputField in form.outputs %}
                    <li>
                        {{ form_label(outputfield,'Output') }}
                        {{ form_errors(outputField) }}
                        {{ form_widget(outputField) }}
                    </li>
                {% endfor %}
            </ul>
        </div>
        <div class="col-sm-4">
            {#{{ form_label(form.emails,'E-mails') }}#}
            {{ form_label(form.testcasemarks,'Marks') }}
            {#store the prototype on the data-prototype attribute#}
            <ul id="testcasemark-fields-list"
                data-prototype="{{ form_widget(form.testcasemarks.vars.prototype)|e('html_attr') }}">
                {% for testcasemarkField in form.testcasemarks %}
                    <li>
                        {{ form_label(testcasemarkField,'Marks') }}
                        {{ form_errors(testcasemarkField) }}
                        {{ form_widget(testcasemarkField) }}
                    </li>
                {% endfor %}
            </ul>
        </div>
        <div style="padding-left: 100px">
            <a href="#" id="add-testcase">Add Test cases</a>
        </div>

    </div>
    <div>
        {{ form_widget(form.save) }}
    </div>

    {{ form_end(form) }}
</div>


{% endblock %}

{% block script %}

    <script type="text/javascript">
        // keep track of how many email fields have been rendered
        var inputCount = '{{ form.inputs|length }}';
        var outputCount = '{{ form.outputs|length }}';
        var marksCount = '{{ form.testcasemarks|length }}';

        jQuery(document).ready(function() {




            /*var nooftestcases = document.getElementById("form_Nooftestcases");
             vat x = nooftestcases.value;*/

            var inputlList = jQuery('#input-fields-list');
            var outputList = jQuery('#output-fields-list');
            var testcasemarkList = jQuery('#testcasemark-fields-list');

            /*for adding test cases*/
            jQuery('#add-testcase').click(function(e) {
                e.preventDefault();

                var testtypeelement = document.getElementById("form_Testcasetype");
                var testtype = testtypeelement.options[testtypeelement.selectedIndex].value;
                document.getElementById("form_Testcasetype").disabled=true;


                if (testtype=='io'){
                    // grab the prototype template
                    var newinWidget = inputlList.attr('data-prototype');
                    // replace the "__name__" used in the id and name of the prototype
                    // with a number that's unique to your emails
                    // end name attribute looks like name="contact[emails][2]"
                    newWidget = newinWidget.replace(/__name__/g, inputCount);
                    inputCount++;

                    // create a new list element and add it to the list
                    var newinLi = jQuery('<li></li>').html(newWidget);
                    newinLi.appendTo(inputlList);

                    // grab the prototype template
                    var newoutWidget = outputList.attr('data-prototype');
                    // replace the "__name__" used in the id and name of the prototype
                    // with a number that's unique to your emails
                    // end name attribute looks like name="contact[emails][2]"
                    newWidget = newoutWidget.replace(/__name__/g, outputCount);
                    outputCount++;

                    // create a new list element and add it to the list
                    var newoutLi = jQuery('<li></li>').html(newWidget);
                    newoutLi.appendTo(outputList);

                    var newtmWidget = testcasemarkList.attr('data-prototype');
                    // replace the "__name__" used in the id and name of the prototype
                    // with a number that's unique to your emails
                    // end name attribute looks like name="contact[emails][2]"
                    newWidget = newtmWidget.replace(/__name__/g, marksCount);
                    marksCount++;

                    // create a new list element and add it to the list
                    var newtmLi = jQuery('<li></li>').html(newWidget);
                    newtmLi.appendTo(testcasemarkList);

                }

                else if (testtype=='oo'){
                    // grab the prototype template
                    var newoutWidget = outputList.attr('data-prototype');
                    // replace the "__name__" used in the id and name of the prototype
                    // with a number that's unique to your emails
                    // end name attribute looks like name="contact[emails][2]"
                    newWidget = newoutWidget.replace(/__name__/g, outputCount);
                    outputCount++;

                    // create a new list element and add it to the list
                    var newoutLi = jQuery('<li></li>').html(newWidget);
                    newoutLi.appendTo(outputList);

                    var newtmWidget = testcasemarkList.attr('data-prototype');
                    // replace the "__name__" used in the id and name of the prototype
                    // with a number that's unique to your emails
                    // end name attribute looks like name="contact[emails][2]"
                    newWidget = newtmWidget.replace(/__name__/g, marksCount);
                    marksCount++;

                    // create a new list element and add it to the list
                    var newtmLi = jQuery('<li></li>').html(newWidget);
                    newtmLi.appendTo(testcasemarkList);
                }
            });

            /*For deleting test cases*/
            jQuery('#remove-testcase').click(function(e) {
                var testtypeelement = document.getElementById("form_Testcasetype");
                var testtype = testtypeelement.options[testtypeelement.selectedIndex].value;

                if (testtype=='io'){

                }
            });
        })
    </script>
{% endblock %}